// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios16.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name FSocket
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import socket_IO
public protocol NSocketDeleagte : ObjectiveC.NSObject {
  func onConnected()
  func onError(error: Swift.String)
  func onMessage(message: Foundation.Data)
}
@objc @_inheritsConvenienceInitializers public class NSocket : ObjectiveC.NSObject {
  public func connect(url: Swift.String, port: Swift.Int, delegate: FSocket.NSocketDeleagte)
  public func disconnect()
  public func sendEvent(event: Swift.String, data: Foundation.NSDictionary)
  @objc override dynamic public init()
  @objc deinit
}
extension FSocket.NSocket : socket_IO.SocketIODelegate {
  @objc dynamic public func socketIODidConnect(_ socket: socket_IO.SocketIO!)
  @objc dynamic public func socketIO(_ socket: socket_IO.SocketIO!, onError error: Swift.Error!)
  @objc dynamic public func socketIO(_ socket: socket_IO.SocketIO!, didReceiveMessage packet: socket_IO.SocketIOPacket!)
  @objc dynamic public func socketIODidDisconnect(_ socket: socket_IO.SocketIO!, disconnectedWithError error: Swift.Error!)
}
